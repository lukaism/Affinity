var cov_1qa0r00fkt=function(){var path="/Users/LukaBontempi/bootcamp/collab/skylab-bootcamp-201909/staff/luka-bontempi/affinity/affinity-api/logic/reject-candidate/index.js";var hash="a508060e6b842e0633a90ffdd06602ef41787533";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/LukaBontempi/bootcamp/collab/skylab-bootcamp-201909/staff/luka-bontempi/affinity/affinity-api/logic/reject-candidate/index.js",statementMap:{"0":{start:{line:1,column:62},end:{line:1,column:86}},"1":{start:{line:2,column:39},end:{line:2,column:63}},"2":{start:{line:4,column:0},end:{line:26,column:1}},"3":{start:{line:5,column:4},end:{line:5,column:24}},"4":{start:{line:6,column:4},end:{line:6,column:39}},"5":{start:{line:7,column:4},end:{line:7,column:82}},"6":{start:{line:7,column:32},end:{line:7,column:82}},"7":{start:{line:8,column:4},end:{line:8,column:24}},"8":{start:{line:9,column:4},end:{line:9,column:39}},"9":{start:{line:10,column:4},end:{line:10,column:82}},"10":{start:{line:10,column:32},end:{line:10,column:82}},"11":{start:{line:12,column:4},end:{line:25,column:8}},"12":{start:{line:13,column:21},end:{line:13,column:45}},"13":{start:{line:14,column:34},end:{line:14,column:58}},"14":{start:{line:16,column:8},end:{line:16,column:74}},"15":{start:{line:16,column:19},end:{line:16,column:74}},"16":{start:{line:17,column:8},end:{line:17,column:87}},"17":{start:{line:17,column:32},end:{line:17,column:87}},"18":{start:{line:19,column:8},end:{line:19,column:31}},"19":{start:{line:20,column:8},end:{line:20,column:34}},"20":{start:{line:23,column:8},end:{line:23,column:25}},"21":{start:{line:24,column:8},end:{line:24,column:19}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:17},end:{line:4,column:18}},loc:{start:{line:4,column:36},end:{line:26,column:1}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:12},end:{line:12,column:13}},loc:{start:{line:12,column:24},end:{line:25,column:5}},line:12}},branchMap:{"0":{loc:{start:{line:7,column:4},end:{line:7,column:82}},type:"if",locations:[{start:{line:7,column:4},end:{line:7,column:82}},{start:{line:7,column:4},end:{line:7,column:82}}],line:7},"1":{loc:{start:{line:10,column:4},end:{line:10,column:82}},type:"if",locations:[{start:{line:10,column:4},end:{line:10,column:82}},{start:{line:10,column:4},end:{line:10,column:82}}],line:10},"2":{loc:{start:{line:16,column:8},end:{line:16,column:74}},type:"if",locations:[{start:{line:16,column:8},end:{line:16,column:74}},{start:{line:16,column:8},end:{line:16,column:74}}],line:16},"3":{loc:{start:{line:17,column:8},end:{line:17,column:87}},type:"if",locations:[{start:{line:17,column:8},end:{line:17,column:87}},{start:{line:17,column:8},end:{line:17,column:87}}],line:17}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"a508060e6b842e0633a90ffdd06602ef41787533"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{validate,errors:{NotFoundError,ContentError}}=(cov_1qa0r00fkt.s[0]++,require('affinity-util'));const{ObjectId,models:{User}}=(cov_1qa0r00fkt.s[1]++,require('affinity-data'));cov_1qa0r00fkt.s[2]++;module.exports=function(id1,id2){cov_1qa0r00fkt.f[0]++;cov_1qa0r00fkt.s[3]++;validate.string(id1);cov_1qa0r00fkt.s[4]++;validate.string.notVoid('id1',id1);cov_1qa0r00fkt.s[5]++;if(!ObjectId.isValid(id1)){cov_1qa0r00fkt.b[0][0]++;cov_1qa0r00fkt.s[6]++;throw new ContentError(`${id1} is not a valid id`);}else{cov_1qa0r00fkt.b[0][1]++;}cov_1qa0r00fkt.s[7]++;validate.string(id2);cov_1qa0r00fkt.s[8]++;validate.string.notVoid('id2',id2);cov_1qa0r00fkt.s[9]++;if(!ObjectId.isValid(id2)){cov_1qa0r00fkt.b[1][0]++;cov_1qa0r00fkt.s[10]++;throw new ContentError(`${id2} is not a valid id`);}else{cov_1qa0r00fkt.b[1][1]++;}cov_1qa0r00fkt.s[11]++;return(async()=>{cov_1qa0r00fkt.f[1]++;const user=(cov_1qa0r00fkt.s[12]++,await User.findById(id1));const rejectedcandidate=(cov_1qa0r00fkt.s[13]++,await User.findById(id2));cov_1qa0r00fkt.s[14]++;if(!user){cov_1qa0r00fkt.b[2][0]++;cov_1qa0r00fkt.s[15]++;throw new NotFoundError(`user with id ${id} not found`);}else{cov_1qa0r00fkt.b[2][1]++;}cov_1qa0r00fkt.s[16]++;if(!rejectedcandidate){cov_1qa0r00fkt.b[3][0]++;cov_1qa0r00fkt.s[17]++;throw new NotFoundError(`user with id ${id} not found`);}else{cov_1qa0r00fkt.b[3][1]++;}cov_1qa0r00fkt.s[18]++;user.rejected.push(id2);cov_1qa0r00fkt.s[19]++;user.lastAccess=new Date();cov_1qa0r00fkt.s[20]++;await user.save();cov_1qa0r00fkt.s[21]++;return user;})();};